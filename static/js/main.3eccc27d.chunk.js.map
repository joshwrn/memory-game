{"version":3,"sources":["components/Card.js","components/CardFactory.js","img/one.png","img/two.jpeg","img/three.png","img/four.jpeg","img/five.jpeg","img/six.jpeg","img/seven.jpeg","img/eight.jpeg","img/nine.jpeg","img/ten.png","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","click","hasClicked","imageName","animation","data-chosen","data-image-name","id","onClick","className","style","src","alt","initial","imageSrc","clicked","CardFactory","useState","images","setImage","score","setScore","highScore","setHighScore","handleClick","e","preventDefault","imageNameAtt","target","getAttribute","findImage","findIndex","old","array","i","length","j","Math","floor","random","temp","shuffleArray","prevCount","forEach","selectedDiv","document","getElementsByTagName","setProperty","setTimeout","addColor","console","log","cards","map","item","uniqid","Board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3eccc27d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ image, click, hasClicked, imageName, animation }) => {\n  return (\n    <div\n      data-chosen={hasClicked}\n      data-image-name={imageName}\n      id={imageName}\n      onClick={click}\n      className=\"card\"\n      style={animation}\n    >\n      <img\n        data-chosen={hasClicked}\n        data-image-name={imageName}\n        className=\"card-image\"\n        src={image}\n        alt=\"card\"\n      ></img>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport uniqid from 'uniqid';\nimport Card from './Card';\nimport one from '../img/one.png';\nimport two from '../img/two.jpeg';\nimport three from '../img/three.png';\nimport four from '../img/four.jpeg';\nimport five from '../img/five.jpeg';\nimport six from '../img/six.jpeg';\nimport seven from '../img/seven.jpeg';\nimport eight from '../img/eight.jpeg';\nimport nine from '../img/nine.jpeg';\nimport ten from '../img/ten.png';\n\nlet initial = [\n  { imageSrc: one, imageName: 'one', clicked: false },\n  { imageSrc: two, imageName: 'two', clicked: false },\n  { imageSrc: three, imageName: 'three', clicked: false },\n  { imageSrc: four, imageName: 'four', clicked: false },\n  { imageSrc: five, imageName: 'five', clicked: false },\n  { imageSrc: six, imageName: 'six', clicked: false },\n  { imageSrc: seven, imageName: 'seven', clicked: false },\n  { imageSrc: eight, imageName: 'eight', clicked: false },\n  { imageSrc: nine, imageName: 'nine', clicked: false },\n  { imageSrc: ten, imageName: 'ten', clicked: false },\n];\n\nconst CardFactory = () => {\n  const [images, setImage] = useState(initial);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [color] = useState('');\n  //+ add score\n  function increment() {\n    setScore((prevCount) => prevCount + 1);\n  }\n\n  //+reset score\n  function reset() {\n    setScore((prevCount) => prevCount - prevCount);\n  }\n\n  function updateHighScore() {\n    if (score === highScore && score < 10) {\n      setHighScore((prevCount) => prevCount + 1);\n    } else if (score === 10) {\n      setHighScore('You Win');\n    }\n  }\n\n  //+ Randomize array in-place using Durstenfeld shuffle algorithm */\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const addColor = () => {\n    const selectedDiv = document.getElementsByTagName('HTML')[0];\n    selectedDiv.style.setProperty('animation', 'red-bg .5s linear 1');\n    setTimeout(function () {\n      selectedDiv.style.setProperty('animation', '');\n    }, 1000);\n  };\n\n  //? click\n  const handleClick = (e) => {\n    e.preventDefault();\n    //+ elements\n    const imageNameAtt = e.target.getAttribute('data-image-name');\n\n    //+ get image index\n    const findImage = images.findIndex(\n      (image) => image.imageName === imageNameAtt\n    );\n    if (images[findImage].clicked === false) {\n      //+ set images as clicked with the correct index\n      setImage(\n        (old) => [...old],\n        {\n          [images[findImage]]: (images[findImage].clicked = true),\n        },\n        shuffleArray(images)\n      );\n      //+ set high score\n      updateHighScore();\n      //+ set current score\n      increment();\n    } else {\n      //+ reset clicked status\n      setImage(\n        (old) => [...old],\n        images.forEach((image) => {\n          image.clicked = false;\n        })\n      );\n      reset();\n      addColor();\n    }\n\n    console.log(images);\n  };\n\n  //? create cards\n  let cards = images.map((item) => {\n    return (\n      <Card\n        click={handleClick}\n        hasClicked={item.clicked}\n        key={uniqid()}\n        image={item.imageSrc}\n        imageName={item.imageName}\n      />\n    );\n  });\n\n  //\n  return (\n    <div id=\"board\">\n      <h1>Memory Game</h1>\n      <div className=\"scoreBoard\">\n        <p className=\"score\">High Score: {highScore}</p>\n        <p className=\"score\">Current Score: {score}</p>\n      </div>\n      <div className=\"factory\">{cards}</div>\n    </div>\n  );\n};\n\nexport default CardFactory;\n","export default __webpack_public_path__ + \"static/media/one.fe20c8d2.png\";","export default __webpack_public_path__ + \"static/media/two.73303d19.jpeg\";","export default __webpack_public_path__ + \"static/media/three.b7a5f8e4.png\";","export default __webpack_public_path__ + \"static/media/four.47bbe5de.jpeg\";","export default __webpack_public_path__ + \"static/media/five.88ba0297.jpeg\";","export default __webpack_public_path__ + \"static/media/six.1f84d973.jpeg\";","export default __webpack_public_path__ + \"static/media/seven.1e153dce.jpeg\";","export default __webpack_public_path__ + \"static/media/eight.785832c0.jpeg\";","export default __webpack_public_path__ + \"static/media/nine.e893cdf3.jpeg\";","export default __webpack_public_path__ + \"static/media/ten.27b42260.png\";","import React from 'react';\nimport CardFactory from './CardFactory';\n\nconst Board = () => {\n  return (\n    <div>\n      <CardFactory />\n    </div>\n  );\n};\n\nexport default Board;\n","import './styles/App.css';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}